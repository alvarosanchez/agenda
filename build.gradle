plugins {
    id "com.github.erdi.webdriver-binaries" version "2.0"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "net.ltgt.apt-eclipse" version "0.18"
    id "net.ltgt.apt-idea" version "0.18"
    id "com.gorylenko.gradle-git-properties" version "2.0.0"
}

apply plugin:"application"
apply plugin:"groovy"

version "0.39"
group "greachconf"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:$micronautVersion"
    }
}
configurations {
    developmentOnly
}
dependencies {
    developmentOnly "io.micronaut:micronaut-runtime-osx"
    developmentOnly "net.java.dev.jna:jna"
    developmentOnly "io.methvin:directory-watcher"

    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut.configuration:micronaut-hibernate-validator"
    compile "io.micronaut:micronaut-validation"

    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-inject"

    compile "io.micronaut:micronaut-runtime"
    compileOnly "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testCompile("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    compile "io.micronaut:micronaut-management"

    compile "io.micronaut:micronaut-views"
    runtime "org.apache.velocity:velocity-engine-core:$velocityEngineCoreVersion"

    compile ("org.gebish:geb-spock:$gebVersion") {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    compile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"

    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "io.micronaut.test:micronaut-test-spock:1.0.1"
    compile "com.vladsch.flexmark:flexmark:$flexmarkVersion"

}
run.classpath += configurations.developmentOnly

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "greachconf.Application"
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

webdriverBinaries {
    chromedriver "$chromeDriverVersion"
    geckodriver "$geckodriverVersion"
}
tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    beforeTest { descriptor -> logger.quiet " -- $descriptor" }
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat 'full'
    }
}
